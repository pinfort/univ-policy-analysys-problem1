import random

# ポアソン分布のデータ
# --------------単純-------------------
# poisson = [[0.36794187, 0.36793544, 0.18386335, 0.06129542, 0.01531225, 0.00306008, 0.00050938, 7.181e-05, 9.18e-06, 1.11e-06, 8e-08], [0.13529812, 0.27067702, 0.27074833, 0.18040308, 0.09024047, 0.03608784, 0.01200931, 0.00343874, 0.00086178, 0.00018977, 3.74e-05], [0.04981894, 0.14936052, 0.22401075, 0.22410673, 0.16796699, 0.100817, 0.05040116, 0.02160315, 0.0080998, 0.00270429, 0.0008159], [0.01829446, 0.07326037, 0.14651351, 0.19539052, 0.19536248, 0.15627936, 0.10420343, 0.05954272, 0.02977817, 0.01323323, 0.00529378]]
# ----------------累積------------------
# poisson_accumulation = [[0.36784791, 0.7357856300000001, 0.9196883400000001, 0.9809944100000001, 0.9963431700000001, 0.9994107600000001, 0.9999172100000001, 0.9999897300000001, 0.9999988000000002, 0.9999999000000002, 1.0000000000000002], [0.13528054, 0.40596685, 0.67669053, 0.85714029, 0.9473641, 0.98342784, 0.99546703, 0.9989053800000001, 0.9997633600000001, 0.9999538600000001, 0.9999917300000001], [0.04978651, 0.19912222000000002, 0.42315363, 0.6471504299999999, 0.81522641, 0.91607997, 0.9664965, 0.98810131, 0.99619292, 0.9988956400000001, 0.9997069500000001], [0.01831818, 0.09155664000000001, 0.23811299000000002, 0.43357749, 0.62885521, 0.78506555, 0.8892757, 0.94884207, 0.97862909, 0.99184969, 0.9971529]]


class TimeZone(object):
    # 累積ポアソン分布
    POISSON_ACCUMULATION = [
        [0.36784791, 0.7357856300000001, 0.9196883400000001, 0.9809944100000001, 0.9963431700000001, 0.9994107600000001, 0.9999172100000001, 0.9999897300000001, 0.9999988000000002, 0.9999999000000002, 1.0000000000000002],
        [0.13528054, 0.40596685, 0.67669053, 0.85714029, 0.9473641, 0.98342784, 0.99546703, 0.9989053800000001, 0.9997633600000001, 0.9999538600000001, 0.9999917300000001],
        [0.04978651, 0.19912222000000002, 0.42315363, 0.6471504299999999, 0.81522641, 0.91607997, 0.9664965, 0.98810131, 0.99619292, 0.9988956400000001, 0.9997069500000001],
        [0.01831818, 0.09155664000000001, 0.23811299000000002, 0.43357749, 0.62885521, 0.78506555, 0.8892757, 0.94884207, 0.97862909, 0.99184969, 0.9971529]
        ]
    
    # 時間帯ごとの平均人数
    LUNCH = 4
    DINNER = 2
    OTHER = 1

    @staticmethod
    def getPoissonByTimeZone(time_zone):
        if time_zone > 4:
            raise Exception('over 4 poisson not supported')
        return TimeZone.POISSON_ACCUMULATION[time_zone - 1]

    @staticmethod
    def getRandomCustomerCount(time_zone):
        poisson = TimeZone.getPoissonByTimeZone(time_zone)
        random.seed()
        rand = random.random()
        count = 0
        for f in poisson:
            count = count + 1
            if rand < f:
                break
        else:
            count = count + 1
        return count
